version: "3.9"

services:
  feapp:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: fullstack-fe
    environment:
      - NODE_ENV=$NODE_ENV
    ports:
      - "127.0.0.1:8080:80"
    networks:
      fullstack-demo-app:
        aliases:
          - "fe-app"

  nodeapp:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    user: "node"
    container_name: fullstack-node
    working_dir: /home/node/app
    environment:
      - NODE_ENV=$NODE_ENV
    volumes:
      - ./backend:/home/node/app
    expose:
      - "3000"
    ports:
      - "127.0.0.1:3000:3000"
    command: "yarn start"
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3000/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 120s
    networks:
      fullstack-demo-app:
        aliases:
          - "node-app"

  db:
    image: mysql:8.0.28
    command: --default-authentication-plugin=mysql_native_password
    container_name: fullstack-db
    restart: always
    ports:
      - 127.0.0.1:3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    volumes:
      - fullstack-data:/var/lib/mysql
    healthcheck:
      test: mysql $MYSQL_DATABASE --user=$MYSQL_USER --password='$MYSQL_PASSWORD' --silent --execute "SELECT 1;"
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      fullstack-demo-app:
        aliases:
          - "db-mysql"

networks:
  fullstack-demo-app:

volumes:
  fullstack-data:
